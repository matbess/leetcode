#define CATCH_CONFIG_MAIN
#include <iostream>
#include <algorithm>
#include "catch.hpp"
#include "Solution.h"

using namespace std;
using namespace leetcode;

TEST_CASE("", "[mergeIntervals]")
{
    Solution solution;

    SECTION("Min/max values")
    {
        CHECK(solution.merge({{0,0}}) == vector<vector<int>>{{0,0}});
        CHECK(solution.merge({{104,104}}) == vector<vector<int>>{{104,104}});
        CHECK(solution.merge({{0,104}}) == vector<vector<int>>{{0,104}});
        CHECK(solution.merge({{0,0},{0,0},{0,0}}) == vector<vector<int>>{{0,0}});
        CHECK(solution.merge({{0,0},{0,104},{104,104}}) == vector<vector<int>>{{0,104}});
    }

    SECTION("Nothing to merge")
    {
        CHECK(solution.merge({{0,1},{2,3},{4,5},{6,7}}) ==
            vector<vector<int>>{{0,1},{2,3},{4,5},{6,7}});
    }

    SECTION("Merge all intervals")
    {
        CHECK(solution.merge({{1,4},{4,5}}) == vector<vector<int>>{{1,5}});

        CHECK(solution.merge({{1,4},{4,5},{5,20},{10,21},{12,45},{13,50}}) ==
            vector<vector<int>>{{1,50}});

        CHECK(solution.merge({{1,4},{4,5},{5,20},{10,21},{12,45},{13,50},{50,50}}) ==
            vector<vector<int>>{{1,50}});

        CHECK(solution.merge({{50,100},{50,50},{100,100}}) ==
            vector<vector<int>>{{50,100}});
    }

    SECTION("Merge multiple intervals")
    {
        CHECK(solution.merge({{1,3},{2,6},{8,10},{15,18}}) ==
            vector<vector<int>>{{1,6},{8,10},{15,18}});

        CHECK(solution.merge({{1,3},{2,6},{8,16},{15,18}}) ==
            vector<vector<int>>{{1,6},{8,18}});
    }

    SECTION("Overlapped intervals")
    {
        CHECK(solution.merge({{1,8},{2,6},{8,10},{15,18}}) ==
            vector<vector<int>>{{1,10},{15,18}});

        CHECK(solution.merge({{1,7},{2,6},{8,10},{15,18}}) ==
            vector<vector<int>>{{1,7},{8,10},{15,18}});

        CHECK(solution.merge({{1,100},{2,6},{8,10},{15,18}}) ==
            vector<vector<int>>{{1,100}});

        CHECK(solution.merge(
            {{0,13},{1,2},{3,10},{4,15},{4,5},{14,20},{21,21},
             {21,27},{22,29},{28,40},{30,33},{41,41}}) ==
            vector<vector<int>>{{0,20},{21,40},{41,41}});
    }

    SECTION("Out of order intervals")
    {
        CHECK(solution.merge({{12,20},{1,2},{3,10},{0,13}}) ==
            vector<vector<int>>{{0,20}});

        CHECK(solution.merge({{12,20},{1,2},{3,10},{0,13},{4,5}}) ==
            vector<vector<int>>{{0,20}});

        CHECK(solution.merge({{14,20},{1,2},{3,10},{4,15},{0,13},{4,5}}) ==
            vector<vector<int>>{{0,20}});

        CHECK(solution.merge(
            {{28,40},{0,13},{3,10},{21,27},{14,20},{4,5},
             {22,29},{41,41},{30,33},{4,15},{21,21},{1,2}}) ==
            vector<vector<int>>{{0,20},{21,40},{41,41}});

        CHECK(solution.merge({{10,30},{1,50},{0,104},{2,90}}) ==
            vector<vector<int>>{{0,104}});
    }

    SECTION("Max number of intervals")
    {
        CHECK(solution.merge(
            {{0,1},{1,2},{2,3},{3,4},{4,5},{5,6},{6,7},{7,8},{8,9},{9,10},
             {10,11},{11,12},{12,13},{13,14},{14,15},{15,16},{16,17},{17,18},{18,19},{19,20},
             {20,21},{21,22},{22,23},{23,24},{24,25},{25,26},{26,27},{27,28},{28,29},{29,30},
             {30,31},{31,32},{32,33},{33,34},{34,35},{35,36},{36,37},{37,38},{38,39},{39,40},
             {40,41},{41,42},{42,43},{43,44},{44,45},{45,46},{46,47},{47,48},{48,49},{49,50},
             {50,51},{51,52},{52,53},{53,54},{54,55},{55,56},{56,57},{57,58},{58,59},{59,60},
             {60,61},{61,62},{62,63},{63,64},{64,65},{65,66},{66,67},{67,68},{68,69},{69,70},
             {70,71},{71,72},{72,73},{73,74},{74,75},{75,76},{76,77},{77,78},{78,79},{79,80},
             {80,81},{81,82},{82,83},{83,84},{84,85},{85,86},{86,87},{87,88},{88,89},{89,90},
             {90,91},{91,92},{92,93},{93,94},{94,95},{95,96},{96,97},{97,98},{98,99},{99,100},
             {100,101},{101,102},{102,103},{103,104}}) ==
            vector<vector<int>>{{0,104}});

        CHECK(solution.merge(
            {{93,94},{6,7},{99,100},{44,45},{103,104},{23,24},{54,55},{97,98},{60,61},{102,103},
             {77,78},{10,11},{100,101},{79,80},{46,47},{15,16},{14,15},{40,41},{33,34},{76,77},
             {98,99},{26,27},{13,14},{49,50},{56,57},{11,12},{86,87},{41,42},{82,83},{2,3},{70,71},
             {0,1},{74,75},{78,79},{75,76},{31,32},{58,59},{9,10},{35,36},{69,70},{53,54},{37,38},
             {8,9},{84,85},{50,51},{18,19},{72,73},{73,74},{39,40},{19,20},{90,91},{65,66},{12,13},
             {25,26},{52,53},{101,102},{96,97},{67,68},{3,4},{48,49},{68,69},{27,28},{88,89},
             {34,35},{47,48},{91,92},{17,18},{21,22},{81,82},{4,5},{43,44},{30,31},{61,62},{24,25},
             {80,81},{45,46},{92,93},{28,29},{51,52},{42,43},{36,37},{38,39},{64,65},{32,33},
             {95,96},{1,2},{59,60},{16,17},{20,21},{57,58},{5,6},{83,84},{94,95},{62,63},{55,56},
             {29,30},{7,8},{22,23},{89,90},{85,86},{71,72},{87,88},{66,67},{63,64}}) ==
            vector<vector<int>>{{0,104}});
    }
}

